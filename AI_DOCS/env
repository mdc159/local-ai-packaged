# Change the name of this file to .env after updating it!

############
# [required] 
# n8n credentials - use the command `openssl rand -hex 32` to generate both
#   openssl is available by default on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
#   Or run the command: python -c "import secrets; print(secrets.token_hex(32))"
############

N8N_ENCRYPTION_KEY=48d8ecf85ff45205f149b021933b72c2d20df183a5125b59544fc9440ec3b64f
N8N_USER_MANAGEMENT_JWT_SECRET=5e77e81a38266747eb34c873948712c06bcecd570714a089c1726f366e67da2c


############
# [required]
# Supabase Secrets

# YOU MUST CHANGE THESE BEFORE GOING INTO PRODUCTION
# Read these docs for any help: https://supabase.com/docs/guides/self-hosting/docker
# For the JWT Secret and keys, see: https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# For the other secrets, see: https://supabase.com/docs/guides/self-hosting/docker#update-secrets
# You can really decide any value for POOLER_TENANT_ID like 1000.

# Note that using special symbols (like '%') can complicate things a bit for your Postgres password.
# If you use special symbols in your Postgres password, you must remember to percent-encode your password later if using the Postgres connection string, for example, postgresql://postgres.projectref:p%3Dword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
############

POSTGRES_PASSWORD=_N-0x)Dg(Jy7^r-(O7xqKHkoj_ICD-te1h1vmYn
JWT_SECRET=5aabfa5bbeb1af0a99b09076e906d9ab0c2ff5c1e4f0ed92cfadb48956cd61cf
ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzQ5ODg0NDAwLCJleHAiOjE5MDc2NTA4MDB9.OPJtOSa4QPVr-89Y5pk4ufqt8f5CwM1phFAcXzZT3RI
SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic2VydmljZV9yb2xlIiwiaXNzIjoic3VwYWJhc2UiLCJpYXQiOjE3NDk4ODQ0MDAsImV4cCI6MTkwNzY1MDgwMH0.CfPsyNx81NLJS0GhwuIMApyDprIC13heN6iGnCmjdBw
DASHBOARD_USERNAME=supabase
DASHBOARD_PASSWORD=q)xUeDO8TE=1YPb5A0Itzh8I
POOLER_TENANT_ID=1001

############
# [required]
# Neo4j username and password
# Replace "neo4j" with your chosen username and "password" with your chosen password.
# Keep the "/" as a separator between the two.
############

NEO4J_AUTH=mdc159/S$*_^NH7!fYz3#*MLWq%DNxc

############
# [required]
# Langfuse credentials
# Each of the secret keys you can set to whatever you want, just make it secure!
# For the encryption key, use the command `openssl rand -hex 32`
#   openssl is available by defualt on Linux/Mac
#   For Windows, you can use the 'Git Bash' terminal installed with git
############

CLICKHOUSE_PASSWORD==JulSkQOsIdEQ4O-6nZUE%eclw^jp_bY
MINIO_ROOT_PASSWORD=)WFC_*nWoNjd@1i4Oo&!C5u=vAHNB8Vl
LANGFUSE_SALT=b836df9ab9f9471351fa66663f29957788e7fab6c60980b64195b5d3bcd723aa
NEXTAUTH_SECRET=38e8443aad5b1e912673361f4c295945a43e76b6ecf0c00567cfc0cdbeed5b5e
ENCRYPTION_KEY=f9b9946a982491de571e7575b37dd73005034add7a679b86154114f8d5771036

############
# [required for prod]
# Caddy Config

# By default listen on https://localhost:[service port] and don't use an email for SSL
# To change this for production:
# Uncomment all of these environment variables for the services you want exposed
# Note that you might not want to expose Ollama or SearXNG since they aren't secured by default
# Replace the placeholder value with the host for each service (like n8n.yourdomain.com)
# Replace internal by your email (require to create a Let's Encrypt certificate)
############

N8N_HOSTNAME=n8n.pimpshizzle.com
WEBUI_HOSTNAME=openwebui.pimpshizzle.com
FLOWISE_HOSTNAME=flowise.pimpshizzle.com
SUPABASE_HOSTNAME=supabase.pimpshizzle.com
LANGFUSE_HOSTNAME=langfuse.pimpshizzle.com
# OLLAMA_HOSTNAME=ollama.yourdomain.com
# SEARXNG_HOSTNAME=searxng.yourdomain.com
NEO4J_HOSTNAME=neo4j.pimpshizzle.com
LETSENCRYPT_EMAIL=mike5150@protonmail.ch



# Everything below this point is optional.
# Default values will suffice unless you need more features/customization.

   #
   #
#######
 #####
   #

############
# Optional Google Authentication for Supabase
# Get these values from the Google Admin Console
############
ENABLE_GOOGLE_SIGNUP=true
GOOGLE_CLIENT_ID=419890452535-db0iv2gg9bugnooafr5s2l0v4v5pst38.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
GOOGLE_REDIRECT_URI=https://supabase.pimpshizzle.com/auth/v1/callback

############
# Optional SearXNG Config
# If you run a very small or a very large instance, you might want to change the amount of used uwsgi workers and threads per worker
# More workers (= processes) means that more search requests can be handled at the same time, but it also causes more resource usage
############

SEARXNG_UWSGI_WORKERS=4
SEARXNG_UWSGI_THREADS=4

############
# Database - You can change these to any PostgreSQL database that has logical replication enabled.
############

POSTGRES_HOST=db
POSTGRES_DB=postgres
POSTGRES_PORT=5432
# default user is postgres
POSTGRES_USER=postgres

############
# Supavisor -- Database pooler and others that can be left as default values
############
POOLER_PROXY_PORT_TRANSACTION=6543
POOLER_DEFAULT_POOL_SIZE=20
POOLER_MAX_CLIENT_CONN=100
SECRET_KEY_BASE=f87c590be1d221c83df4746a5886470bb0d4f20ceeba779425c711474b173b8d
VAULT_ENC_KEY=a542afb71e78df57674afc44bbc46748


############
# API Proxy - Configuration for the Kong Reverse proxy.
############

KONG_HTTP_PORT=8000
KONG_HTTPS_PORT=8443


############
# API - Configuration for PostgREST.
############

PGRST_DB_SCHEMAS=public,storage,graphql_public

############
# Flowise - Authentication Configuration for Flowise.
############
#FLOWISE_USERNAME=your_username
#FLOWISE_PASSWORD=your_password


############
# Auth - Configuration for the GoTrue authentication server.
############

## General
SITE_URL=http://localhost:3000
ADDITIONAL_REDIRECT_URLS=
JWT_EXPIRY=3600
DISABLE_SIGNUP=false
API_EXTERNAL_URL=http://localhost:8000

## Mailer Config
MAILER_URLPATHS_CONFIRMATION="/auth/v1/verify"
MAILER_URLPATHS_INVITE="/auth/v1/verify"
MAILER_URLPATHS_RECOVERY="/auth/v1/verify"
MAILER_URLPATHS_EMAIL_CHANGE="/auth/v1/verify"

## Email auth
ENABLE_EMAIL_SIGNUP=true
ENABLE_EMAIL_AUTOCONFIRM=true
SMTP_ADMIN_EMAIL=admin@example.com
SMTP_HOST=supabase-mail
SMTP_PORT=2500
SMTP_USER=fake_mail_user
SMTP_PASS=fake_mail_password
SMTP_SENDER_NAME=fake_sender
ENABLE_ANONYMOUS_USERS=false

## Phone auth
ENABLE_PHONE_SIGNUP=true
ENABLE_PHONE_AUTOCONFIRM=true


############
# Studio - Configuration for the Dashboard
############

STUDIO_DEFAULT_ORGANIZATION=Default Organization
STUDIO_DEFAULT_PROJECT=Default Project

STUDIO_PORT=3000
# replace if you intend to use Studio outside of localhost
SUPABASE_PUBLIC_URL=http://localhost:8000

# Enable webp support
IMGPROXY_ENABLE_WEBP_DETECTION=true

# Add your OpenAI API key to enable SQL Editor Assistant
OPENAI_API_KEY=


############
# Functions - Configuration for Functions
############
# NOTE: VERIFY_JWT applies to all functions. Per-function VERIFY_JWT is not supported yet.
FUNCTIONS_VERIFY_JWT=false


############
# Logs - Configuration for Analytics
# Please refer to https://supabase.com/docs/reference/self-hosting-analytics/introduction
############

# Change vector.toml sinks to reflect this change
# these cannot be the same value
LOGFLARE_PUBLIC_ACCESS_TOKEN=97eeed68da4816f2fed25a24db9a67c64690edc2ff6850a08d4333a4be896e33
LOGFLARE_PRIVATE_ACCESS_TOKEN=87d5ffd3ceaac62adcea47b194e30c05f5fb2e3e9251aa7d48084afa67c22d56

# Docker socket location - this value will differ depending on your OS
DOCKER_SOCKET_LOCATION=/var/run/docker.sock

# Google Cloud Project details
GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID
GOOGLE_PROJECT_NUMBER=GOOGLE_PROJECT_NUMBER
